---
import { PUBLIC_WEBRING_URL, WEBRING_USER_ID } from "astro:env/server";
import { z } from "astro:content";
import { useTranslations } from "../i18n/useTranslations";
import { ZodError } from "astro:schema";

const RingItemSchema = z.object({
  id: z.number(),
  name: z.string(),
  url: z.string(),
  favicon: z.union([z.string(), z.null()]).optional(),
});

const UserRingDataSchema = z.object({
  prev: RingItemSchema,
  curr: RingItemSchema,
  next: RingItemSchema,
});

let userData: z.infer<typeof UserRingDataSchema> | null = null;

const response = await fetch(`${PUBLIC_WEBRING_URL}/${WEBRING_USER_ID}/data`, {
  method: "GET",
});

const data = await response.json();

try {
  userData = UserRingDataSchema.parse(data);
} catch (error: unknown) {
  if (error instanceof ZodError) {
    console.error("Validation failed", error.errors);
  } else {
    console.error("An unknown error occurred", error);
  }
}

const locale = Astro.currentLocale ?? "en";
const t = useTranslations(locale);
---

<nav
  class="z-50 text-foreground bg-background border-primary w-full h-16 border-t-2 bottom-0 px-6 fixed flex justify-center"
>
  <div
    class="w-full h-full max-w-screen-lg flex items-center justify-between gap-4"
  >
    <a class="text-center hover:underline" href={userData?.prev?.url || "#"}>
      <span class="text-nowrap">&lt;-</span>
      <span class="hidden md:inline">
        {userData?.prev.name ?? "error :("}
      </span>
    </a>

    <a class="text-center text-primary" href={PUBLIC_WEBRING_URL || "#"}>
      {t("webringNav")["title"]}
    </a>

    <a class="text-center hover:underline" href={userData?.next?.url || "#"}>
      <span class="hidden md:inline text-nowrap">
        {userData?.next.name ?? "error :("}
      </span>
      <span class="text-nowrap">-&gt;</span>
    </a>
  </div>
</nav>
